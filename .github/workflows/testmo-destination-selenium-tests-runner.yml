
name: ðŸ’  testmo [Destination] -- Selenium Project Run & Publish

on:
  repository_dispatch:
    types: [trigger-workflow]
  workflow_dispatch:
    inputs:
      testmo_run_id:
        description: 'testmo_run_id (will be supplied from calling repo) If not supplied will be created' 
        default: -1
        required: true
        type: number
      env_name:
        description: 'Which environment we are running in'
        default: 'Development'
        required: true
        type: string
      release_version:
        description: '[semver] the build being tested (optional)'
        default: '0.0.0'
        required: false
        type: string

  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup dotnet8.0.x
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore & Build
      run: |
        echo "we are working on ENV (env_name): ${{ inputs.env_name }}"
        echo "we are working with VER/SHA (release_version): ${{ inputs.release_version }}"

        dotnet restore
        dotnet build --no-restore

        npm ci 
        npm install --no-save @testmo/testmo-cli

    # run this if we have the default of `-1` as it was not supplied by the calling repo
    - name: Create testmo run
      if: ${{ inputs.testmo_run_id <= 0 }} 
      id: testmo_run_create
      run: |
        run_name=$(TZ=':Australia/Melbourne' date '+%Y%m%d-%H:%M-Selenium-Tests')

        ID=$(npx testmo automation:run:create \
          --instance "$TESTMO_URL" \
          --project-id 1 \
          --name "$run_name" \
          --source "selenium")

        echo "testmo_run_id=$ID" >> $GITHUB_OUTPUT
      env:
        TESTMO_URL: ${{ vars.TESTMO_URL }}
        TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}

    - name: Decide which Testmo Run Id to use (as previous step may not have run)
      id: testmo_run_decider
      run: |
        suppliedRunId=${{ inputs.testmo_run_id }}
        newlyCreatedRunId=${{ steps.testmo_run_create.outputs.testmo_run_id }}
        
        if (( suppliedRunId != -1 )); then
          echo "actual_run_id=$suppliedRunId" >> $GITHUB_OUTPUT
        else
          echo "actual_run_id=$newlyCreatedRunId" >> $GITHUB_OUTPUT
        fi
        
        echo "actual_run_id: $actual_run_id"
        
    - name: Test and Reporting
      run: |

        ## npx is `Run a command from a local or remote npm package`
        ## call into the testmo node executable, submit a run and the last line is the call to dotnet test (NOTE the space after -- and before `dotnet test`)
        echo "id: $RUN_ID"

        npx testmo automation:run:submit-thread \
          --instance "$TESTMO_URL" \
          --run-id "$RUN_ID" \
          --results ./seleniumtestproject/selenium-test-output.xml \
          -- dotnet test --no-build --verbosity normal --environment TEST_ENV="${{ inputs.env_name }}" --environment TEST_VER="${{ inputs.release_version }}" --logger:"junit;LogFilePath=selenium-test-output.xml"
      env:
        RUN_ID: ${{ steps.qase_run_decider.outputs.actual_run_id }}
        TESTMO_URL: ${{ vars.TESTMO_URL }}
        TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}

