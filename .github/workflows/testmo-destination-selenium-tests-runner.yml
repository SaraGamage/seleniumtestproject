
name: ðŸ’  testmo Destination Selenium Project Run & Publish

on:
  repository_dispatch:
    types: [trigger-workflow]
  workflow_dispatch:
    inputs:
      testmo_run_id:
        description: 'testmo_run_id (will be supplied from calling repo) If not supplied will be created' 
        default: -1
        required: true
        type: number
      env_name:
        description: 'Which environment we are running in'
        default: 'Development'
        required: true
        type: string
      release_version:
        description: '[semver] the build being tested (optional)'
        default: '0.0.0'
        required: false
        type: string

  push:
    paths-ignore:
      - '.github/workflows/qase-via-their-ui.yml'
    branches: [ "main" ]
  pull_request:
    paths-ignore:
      - '.github/workflows/qase-via-their-ui.yml'
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup dotnet8.0.x
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore & Build
      run: |
        echo "we are working on ENV (env_name): ${{ inputs.env_name }}"
        echo "we are working with VER/SHA (release_version): ${{ inputs.release_version }}"

        dotnet restore
        dotnet build --no-restore

        npm ci 
        npm install --no-save @testmo/testmo-cli
        
    - name: ðŸ’  Selenium Test Run and ðŸ“¤ testmo Publish 
      continue-on-error: true #using this because dotnet test returns 1 on test failures, to ensure run complete executes
      run: |

        echo "ðŸŸ¢ Starting..."
        run_name=$(TZ=':Australia/Melbourne' date '+%Y%m%d-%H:%M-Selenium-Tests')

        npx testmo automation:run:submit \
          --instance "$TESTMO_URL" \
          --name "$run_name" \
          --project-id 1 \
          --source "ga-with-retries" \
          --results ./seleniumtestproject/selenium-test-output.xml \
          -- node retry-tests.js
      env:
        RUN_ID: ${{ steps.testmo_run_decider.outputs.actual_run_id }}
        TESTMO_URL: ${{ vars.TESTMO_URL }}
        TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}
      
    # - name: ðŸ’  testmo run complete 
    #   run: |
    #     npx testmo automation:run:complete \
    #       --instance "$TESTMO_URL" \
    #       --run-id "$RUN_ID" \
    #       --no-measure-elapsed
    #   env:
    #     RUN_ID: ${{ steps.testmo_run_decider.outputs.actual_run_id }}
    #     TESTMO_URL: ${{ vars.TESTMO_URL }}
    #     TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}

